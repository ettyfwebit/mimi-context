# CI/CD Pipeline for Mimi-Context
# Runs on every push and pull request to main branch
# Tests both Python backend (mimi-core) and React frontend (mimi-web)

name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Backend Tests (Python FastAPI)
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mimi-core

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run database initialization
        run: |
          python scripts/init_db.py

      - name: Run tests with coverage
        run: |
          pytest app/tests/ -v --cov=app --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./mimi-core/coverage.xml
          flags: backend
          name: codecov-backend

  # Frontend Tests (React/TypeScript)
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mimi-web

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./mimi-web/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test -- --coverage

      - name: Build application
        run: npm run build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./mimi-web/coverage/lcov.info
          flags: frontend
          name: codecov-frontend

  # Integration Tests (Optional - runs both backend and frontend together)
  integration-test:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]

    services:
      # Add any external services your app needs (Redis, PostgreSQL, etc.)
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: "./mimi-web/package-lock.json"

      - name: Install backend dependencies
        working-directory: ./mimi-core
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install frontend dependencies
        working-directory: ./mimi-web
        run: npm ci

      - name: Start backend server
        working-directory: ./mimi-core
        run: |
          python scripts/init_db.py
          uvicorn app.main:app --host 0.0.0.0 --port 8080 &
          sleep 5

      - name: Run integration tests
        working-directory: ./mimi-core
        run: pytest app/tests/test_integration.py -v

      - name: Check backend health
        run: |
          curl -f http://localhost:8080/health || exit 1
